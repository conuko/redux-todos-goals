{"version":3,"sources":["components/List.js","actions/todos.js","components/Todos.js","actions/goals.js","components/Goals.js","actions/shared.js","components/App.js","reducers/index.js","reducers/todos.js","reducers/loading.js","reducers/goals.js","middleware/checker.js","middleware/logger.js","middleware/index.js","index.js"],"names":["List","props","className","items","map","item","onClick","toggle","id","complete","name","remove","ADD_TODO","REMOVE_TODO","TOGGLE_TODO","addTodo","todo","type","toggleTodo","handleAddTodo","callBackFunction","dispatch","API","saveTodo","then","catch","alert","handleDeleteTodo","deleteTodo","handleToggle","saveTodoToggle","Todos","addItem","event","preventDefault","input","value","removeItem","toggleItem","placeholder","ref","this","todos","React","Component","connect","state","ADD_GOAL","REMOVE_GOAL","addGoal","goal","handleAddGoal","saveGoal","handleDeleteGoal","deleteGoal","Goals","goals","RECEIVE_DATA","handleInitialData","Promise","all","fetchTodos","fetchGoals","receiveData","App","loading","combineReducers","action","concat","filter","Object","assign","checker","store","next","toLowerCase","includes","logger","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ca17392.chunk.js","sourcesContent":["import React from 'react';\n\nconst List = (props) => {\n    const completed = 'bg-gray-50 hover:bg-blue-100 duration-300 transition m-1 p-5 cursor-pointer border-l-8 border-blue-900 rounded text-gray-600 flex justify-between';\n    const open = 'bg-gray-50 hover:bg-blue-100 duration-300 transition m-1 p-5 cursor-pointer border-l-8 border-blue-400 rounded text-gray-600 flex justify-between shadow-md';\n    return (\n        <div>\n            <ul className=\"m-0 my-4 p-0 list-none w-full\">\n            {props.items.map((item) => (\n                <li key={item.id}>\n                    <span\n                        onClick={() => props.toggle && props.toggle(item.id)}\n                        className={item.complete ? completed : open}\n                        >\n                        <p\n                        className={item.complete ? 'line-through' : ''}>\n                            {item.name}\n                        </p>\n                        <button\n                            className=\"text-red-500 hover:text-red-700 text-sm font-bold no-underline flex right auto mr-2 focus:outline-none\"\n                            onClick={() => props.remove(item)}>\n                                X\n                        </button>\n                    </span>\n                </li>\n            ))}\n        </ul>\n        </div>\n        \n    );\n};\n\nexport default List;","import API from 'goals-todos-api';\n\n// ACTIONS:\nexport const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\n\n// ACTION CREATORS:\nfunction addTodo (todo) {\n    return {\n        type: ADD_TODO,\n        todo,\n    };\n}\nfunction removeTodo (id) {\n    return {\n        type: REMOVE_TODO,\n        id,\n    };\n}\nfunction toggleTodo (id) {\n    return {\n        type: TOGGLE_TODO,\n        id\n    };\n}\n\n// ASYNCHRONOUS ACTION CREATORS (THUNK):\nexport function handleAddTodo (name, callBackFunction) {\n    return (dispatch) => {\n        return API.saveTodo(name)\n            .then((todo) => {\n                dispatch(addTodo(todo));\n                callBackFunction();\n            })\n            .catch(() => {\n                alert('There was an error. Try again.');\n            })\n    }\n}\n\n// redux THUNK function for storing the API call to delete a todo\n// and gives us the ability to return functions from our action creators\nexport function handleDeleteTodo (todo) {\n    return (dispatch) => {\n        dispatch(removeTodo(todo.id));\n\n        return API.deleteTodo(todo.id)\n            .catch(() => {\n                dispatch(addTodo(todo));\n                alert('An error occurred. Try again!');\n            })\n    } \n}\n\nexport function handleToggle (id) {\n    return (dispatch) => {\n        dispatch(toggleTodo(id));\n\n    return API.saveTodoToggle(id)\n        .catch(() => {\n            dispatch(toggleTodo(id));\n            alert('An error occurred. Try again!');\n        })\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from './List';\nimport {\n    handleAddTodo,\n    handleDeleteTodo,\n    handleToggle\n} from '../actions/todos';\n\nclass Todos extends React.Component {\n    addItem = (event) => {\n        const { dispatch } = this.props;\n        event.preventDefault();\n\n        dispatch(handleAddTodo(\n            this.input.value,\n            // callback function that, when it's invoced, will reset the input value to an empty string:\n            () => this.input.value = ''\n        ));\n        };\n\n    removeItem = (todo) => {\n        const { dispatch } = this.props;\n        // dispatch calls the thunk function \"handleDeleteTodo:\"\n        dispatch(handleDeleteTodo(todo));\n    };\n\n    toggleItem = (id) => {\n        const { dispatch } = this.props;\n\n        dispatch(handleToggle(id));\n    };\n\n    render() {\n        return (\n            <div className=\"p-12\">\n                <h1 className=\"uppercase block text-gray-700 text-sm font-bold mb-2\">\n                Todos\n                </h1>\n                <div className='flex items-center justify-between relative'>\n                    <input\n                        name=\"field_name\"\n                        className=\"p-4 pr-20 py-2 border-2 border-gray-200 rounded bg-grey-200 text-gray-600 w-full leading-tight shadow-md focus:outline-none focus:bg-white focus:border-blue-300\"                        \n                        type='text'\n                        placeholder='Add Todo'\n                        ref={(input) => this.input = input}\n                    />\n                    <button \n                    className=\"text-blue-900 hover:text-blue-500 bg-white font-semibold py-1 px-2 absolute right-0 mr-2 focus:outline-none\"\n                    onClick={this.addItem}>\n                        Add\n                    </button>\n                </div>\n                <List\n                    items={this.props.todos}\n                    remove={this.removeItem}\n                    toggle={this.toggleItem}\n                />\n            </div>\n        )\n    };\n};\n\nexport default connect((state) => ({\n    todos: state.todos\n}))(Todos);","import API from 'goals-todos-api';\n\n// ACTION:\nexport const ADD_GOAL = 'ADD_GOAL';\nexport const REMOVE_GOAL = 'REMOVE_GOAL';\n\n// ACTION CREATORS:\nfunction addGoal (goal) {\n    return {\n        type: ADD_GOAL,\n        goal,\n    };\n}\nfunction removeGoal (id) {\n    return {\n        type: REMOVE_GOAL,\n        id,\n    };\n}\n\n// ASYNCHRONOUS ACTION CREATORS (THUNK):\nexport function handleAddGoal (name, callBackFunction) {\n    return (dispatch) => {\n        return API.saveGoal(name)\n            .then((goal) => {\n                dispatch(addGoal(goal));\n                callBackFunction();\n            })\n            .catch(() => alert('There was an error. Try again!'));\n    }\n}\n\nexport function handleDeleteGoal (goal) {\n    return (dispatch) => {\n        dispatch(removeGoal(goal.id));\n\n    return API.deleteGoal(goal.id)\n        .catch(() => {\n            dispatch(addGoal(goal));\n            alert('An error occurred. Try again.');\n        })\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from './List';\nimport {\n    handleAddGoal,\n    handleDeleteGoal,\n} from '../actions/goals';\n\n\nclass Goals extends React.Component {\n    // method for adding an item to the Goals list:\n    addItem = (event) => {\n        const { dispatch } = this.props;\n        event.preventDefault();\n        // call the thunk function \"handleAddGoal\":\n        dispatch(handleAddGoal(\n            this.input.value,\n            () => this.input.value = ''\n        )) \n    }\n    // method for removing an item of the Goals list:\n    removeItem = (goal) => {\n        const { dispatch } = this.props;\n        // call the thunk function \"handleDeleteGoal\":\n        dispatch(handleDeleteGoal(goal));\n    }\n\n    render() {\n        return (\n            <div className=\"p-12\">\n                <h1 className=\"uppercase block text-gray-700 text-sm font-bold mb-2\">\n                Goals\n                </h1>\n                <div className='flex items-center justify-between relative'>\n                    <input\n                        name=\"field_name\"\n                        className=\"p-4 pr-20 py-2 border-2 border-gray-200 rounded bg-grey-200 text-gray-600 w-full leading-tight shadow-md focus:outline-none focus:bg-white focus:border-blue-300\"                        \n                        type='text'\n                        placeholder='Add Goal'\n                        ref={(input) => this.input = input}\n                    />\n                    <button\n                    className=\"text-blue-900 hover:text-blue-500 bg-white font-semibold py-1 px-2 absolute right-0 mr-2 focus:outline-none\"                    \n                    onClick={this.addItem}>\n                        Add\n                    </button>\n                </div>\n\n\n                <List \n                    items={this.props.goals}\n                    remove={this.removeItem}\n                />\n            </div>\n        )\n    };\n};\n\nexport default connect((state) => ({\n    goals: state.goals\n}))(Goals);","import API from 'goals-todos-api';\n\n// ACTIONS:\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\n\n// ACTION CREATORS:\nfunction receiveData (todos, goals) {\n    return {\n        type: RECEIVE_DATA,\n        todos,\n        goals,\n    };\n}\n\n// ASYNCHRONOUS ACTION CREATORS:\nexport function handleInitialData () {\n    return (dispatch) => {\n        return Promise.all([\n            API.fetchTodos(),\n            API.fetchGoals()\n        ]).then(([ todos, goals ]) => {\n            dispatch(receiveData(todos, goals));\n        });\n    }\n}","import React from 'react';\nimport ConnectedTodos from './Todos';\nimport ConnectedGoals from './Goals';\nimport { connect } from 'react-redux';\nimport {\n  handleInitialData\n} from '../actions/shared';\n\nclass App extends React.Component {\n  componentDidMount () {\n      const { dispatch } = this.props;\n\n      dispatch(handleInitialData())\n\n  };\n  render() {\n      const { loading } = this.props;\n      if (loading === true) {\n          return <h3>Loading</h3>\n      }\n      return (\n        <div className=\"flex h-screen\">\n          <div\n          className=\"max-w-md m-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n            <ConnectedTodos />\n            <ConnectedGoals />  \n        </div>\n\n        </div>\n\n      )\n  };\n};\n\nexport default connect((state) => ({\n  loading: state.loading\n}))(App);","import { combineReducers } from 'redux';\n\nimport todos from './todos';\nimport loading from './loading';\nimport goals from './goals';\n\nexport default combineReducers({\n    todos,\n    loading,\n    goals\n});","import { RECEIVE_DATA } from '../actions/shared';\nimport {\n    ADD_TODO,\n    REMOVE_TODO,\n    TOGGLE_TODO\n} from '../actions/todos';\n\n\n// <=== reducer function for To Do's (remember: a reducer must be a PURE FUNCTION): ===>\nexport default function todos (state = [], action) {\n    switch(action.type) {\n        case ADD_TODO :\n            return state.concat([action.todo]);\n        case REMOVE_TODO :\n            // To remove a todo item, we called filter() on the state.\n            // This returns a new state (an array) with only todo items \n            // whose id's do not match the id of the todo we want to remove:\n            return state.filter((todo) => todo.id !== action.id);\n        case TOGGLE_TODO :\n            /*\n            To handle toggling a todo item, we want to change the value of the\n            complete property on whatever id is passed along on the action.\n            We mapped over the entire state, and if todo.id matched action.id,\n            we used Object.assign() to return a new object with merged properties:\n            */\n            return state.map((todo) => todo.id !== action.id ? todo :\n                Object.assign({}, todo, { complete: !todo.complete }))\n        case RECEIVE_DATA :\n            return action.todos\n        default : \n            return state;\n    };\n}","import {\n    RECEIVE_DATA\n} from '../actions/shared';\n\n// <=== reducer function for the loader: ===>\nexport default function loading (state = true, action) {\n    switch(action.type) {\n        case RECEIVE_DATA :\n            return false;\n        default :\n            return state;\n    };\n}","import { RECEIVE_DATA } from '../actions/shared';\nimport {\n    ADD_GOAL,\n    REMOVE_GOAL\n} from '../actions/goals';\n\n// <=== reducer function for Goals: ===>\nexport default function goals (state = [], action) {\n    switch(action.type) {\n        case ADD_GOAL :\n            return state.concat([action.goal]);\n        case REMOVE_GOAL :\n            return state.filter((goal) => goal.id !== action.id);\n        case RECEIVE_DATA :\n            return action.goals\n        default : \n        return state;\n    }\n}\n","import { ADD_TODO } from '../actions/todos';\nimport { ADD_GOAL } from '../actions/goals';\n\n\nconst checker = (store) => (next) => (action) => {\n    if (\n        action.type === ADD_TODO &&\n        action.todo.name.toLowerCase().includes('bitcoin')\n    ) {\n        return alert(\"Nope. That's a bad idea.\");\n    }\n    if (\n        action.type === ADD_GOAL &&\n        action.goal.name.toLowerCase().includes('bitcoin')\n    ) {\n        return alert(\"Nope. That's a bad idea.\");\n    }\n    return next(action)\n}\n\nexport default checker;","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n        console.log('The action: ', action)\n        const result = next(action)\n        console.log('The new state: ', store.getState())\n    console.groupEnd();\n    return result;\n}\n\nexport default logger;","import checker from './checker';\nimport logger from './logger';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\n\nexport default applyMiddleware(\n    thunk,\n    checker,\n    logger\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reducer from './reducers';\nimport middleware from './middleware';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}